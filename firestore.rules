rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    match /users/{userId} {
      // Admins can read/write any user document.
      // Regular users can only read/write their own.
      allow read, write: if isAdmin() || (request.auth != null && request.auth.uid == userId);
    }

    match /memorials/{memorialId} {
      // Admins can read/write any memorial.
      // Otherwise, apply existing logic.
      allow read: if isAdmin() || resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.creatorUid);
      
      match /followers/{userId} {
        // A user can only follow/unfollow for themselves.
        allow read, create, delete: if request.auth != null && request.auth.uid == userId;
        allow update: if false; // No updates allowed.
      }
    }

    match /invitations/{invitationId} {
      // Read: Allowed if you sent the invitation or if you are the recipient.
      allow read: if request.auth != null && (request.auth.uid == resource.data.invitedByUid || request.auth.token.email == resource.data.inviteeEmail);
      // Create: Allowed if you are the sender.
      allow create: if request.auth != null && request.resource.data.invitedByUid == request.auth.uid;
      // Update: Allowed only by the recipient to accept it.
      allow update: if request.auth != null && request.auth.token.email == resource.data.inviteeEmail;
      // Delete: Not allowed for clients.
      allow delete: if false;
    }
  }
}